# Tests for the 'DiffUtil' package. -*- tcl -*-
#
# Copyright (c) 2004 by Peter Spjuth. All rights reserved.
#
# $Revision: 1.5 $

package require DiffUtil

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import ::tcltest::*
}

# There are differences between the C and the Diff result.
tcltest::testConstraint CDiff \
        [expr {[info proc DiffUtil::ExecDiffFiles] == ""}]

#----------------------------------------------------------------------

# A wrapper to simplify calling
proc RunTest {list1 list2 args} {
    set ch [open _diff_1 w]
    if {[llength $list1] > 0} {
        puts $ch [join $list1 \n]
    }
    close $ch
    set ch [open _diff_2 w]
    if {[llength $list2] > 0} {
        puts $ch [join $list2 \n]
    }
    close $ch

    set apa [catch {eval DiffUtil::diffFiles $args _diff_1 _diff_2} res]
    file delete -force _diff_1 _diff_2
    return $res
}

#----------------------------------------------------------------------

test difffiles-1.1 {standard cases} {
    set l1 {a b c d   f g h i j k l}
    set l2 {  b c d e f g x y   k l}
    RunTest $l1 $l2
} [list {1 1 1 0} {5 0 4 1} {7 3 7 2}]

test difffiles-1.2 {standard cases, error} -body {
    set l1 {a b c d   f g h i j k l}
    set l2 {  b c d e f g x y   k l}
    RunTest $l1 $l2 -hubba
} -result {bad option "-hubba"*} -match glob

test difffiles-1.3 {standard cases, error} -body {
    DiffUtil::diffFiles a
} -returnCodes 1 -result "wrong # args*" -match glob

test difffiles-2.1 {alignment, no align} {
    set l1 {a b c d  }
    set l2 {a   c d b}
    RunTest $l1 $l2
} [list {2 1 2 0} {5 0 4 1}]

test difffiles-2.2 {alignment} {
    set l1 {a     b c d}
    set l2 {a c d b    }
    RunTest $l1 $l2 -align {2 4}
} [list {2 0 2 2} {3 2 5 0}]

test difffiles-2.3 {alignment, error} -body {
    DiffUtil::diffFiles -align {1} a b
} -returnCodes 1 -result {bad align*} -match glob

test difffiles-2.4 {alignment, impossible align ignored} {
    set l1 {a     b c d}
    set l2 {a c d b    }
    RunTest $l1 $l2 -align {2 4 3 2}
} [list {2 0 2 2} {3 2 5 0}]

test difffiles-2.5 {alignment+range} -body {
    set l1 {a     b c d e}
    set l2 {x c d b     y}
    RunTest $l1 $l2 -align {2 4} -range {2 4 2 4}
} -result [list {2 0 2 2} {3 2 5 0}]

test difffiles-2.6 {alignment, switched order} {
    set l1 {a     b c d e f g    }
    set l2 {a c d b         g e f}
    RunTest $l1 $l2 -align {7 5 2 4}
} [list {2 0 2 2} {3 4 5 0} {8 0 6 2}]

test difffiles-3.1 {ignore space} {
    set l1 {a {b c} d e f {g h}  i}
    set l2 {a {bc}  x e f {g  h} i}
    RunTest $l1 $l2
} [list {2 2 2 2} {6 1 6 1}]

test difffiles-3.2 {ignore space} {
    set l1 {a {b c} d e f {g h}  i}
    set l2 {a {bc}  x e f {g  h} i}
    RunTest $l1 $l2 -b
} [list {2 2 2 2}]

test difffiles-3.3 {ignore space} {
    set l1 {a {b c} d e f {g h}  i}
    set l2 {a {bc}  x e f {g  h} i}
    RunTest $l1 $l2 -w
} [list {3 1 3 1}]


test difffiles-4.1 {range} {
    set l1 {a bc d e f gh  i}
    set l2 {a xy x e f ghh i}
    RunTest $l1 $l2 -range {3 5 3 6}
} [list {3 1 3 1} {6 0 6 1}]

test difffiles-4.2 {range} -body {
    DiffUtil::diffFiles -range {3 5 3} a b
} -returnCodes 1 -result {bad range*} -match glob

test difffiles-4.3 {range} -body {
    DiffUtil::diffFiles -range {-3 5 3 5} a b
} -returnCodes 1 -result {bad range*} -match glob


test difffiles-5.1 {priority} {
    set l1 {a b c d e}
    set l2 {a b c d f e E e}
    RunTest $l1 $l2
} [list {5 0 5 3}]

test difffiles-5.2 {priority} {
    set l1 {a b c d e}
    set l2 {a b c d f e E}
    RunTest $l1 $l2
} [list {5 0 5 1} {6 0 7 1}]

test difffiles-5.3 {priority} {CDiff} {
    set l1 {a b c d e}
    set l2 {a b c d f e E}
    RunTest $l1 $l2 -nocase
} [list {5 0 5 1} {6 0 7 1}]

test difffiles-5.4 {priority} {
    set l1 {a b c d e}
    set l2 {a b c d f E E}
    RunTest $l1 $l2 -nocase
} [list {5 0 5 2}]

test difffiles-5.5 {priority} {
    set l1 {a b c d e f g h i j k l}
    set l2 {a b c d X e f g h Y e f g h Z i j k l}
    RunTest $l1 $l2
} [list {5 0 5 1} {9 0 10 6}]

test difffiles-5.6 {priority} {
    set l1 {a b c d e f g h i j k l}
    set l2 {a b c d X e f g h Y e f g h i j k l}
    RunTest $l1 $l2
} [list {5 0 5 6}]
